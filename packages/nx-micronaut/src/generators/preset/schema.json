{
  "$schema": "http://json-schema.org/schema",
  "$id": "@nxrocks/nx-micronaut:preset",
  "title": "Creates Micronaut project in a new workspace",
  "type": "object",
  "cli": "nx",
  "outputCapture": "pipe",
  "properties": {
    "prjName": {
      "type": "string",
      "description": "Name of the project to generate.",
      "x-prompt": "What is the name of your project?",
      "pattern": "^[a-zA-Z][^:]*$",
      "x-priority": "important"
    },
    "directory": {
      "type": "string",
      "description": "A directory where the project is placed.",
      "alias": "d",
      "x-priority": "important"
    },
    "projectType": {
      "description": "Type of application.",
      "default": "default",
      "type": "string",
      "alias": "type",
      "x-prompt": {
        "message": "What kind of application are you generating?",
        "type": "list",
        "items": [
          {
            "value": "default",
            "label": "Micronaut Application"
          },
          {
            "value": "cli",
            "label": "Command Line Application"
          },
          {
            "value": "function",
            "label": "Function Application for Serverless"
          },
          {
            "value": "grpc",
            "label": "gRPC Application"
          },
          {
            "value": "messaging",
            "label": "Messaging-Driven Application"
          }
        ]
      },
      "x-priority": "important"
    },
    "micronautVersion": {
      "description": "Micronaut version.",
      "type": "string",
      "default": "current",
      "enum": [
        "current",
        "snapshot",
        "previous"
      ],
      "x-prompt": {
        "message": "Which version of Micronaut would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "current",
            "label": "Current Stable"
          },
          {
            "value": "snapshot",
            "label": "Latest Snapshot"
          },
          {
            "value": "previous",
            "label": "Previous Stable"
          }
        ]
      },
      "x-priority": "important"
    },
    "buildSystem": {
      "description": "Build system to use.",
      "alias": "type",
      "default": "GRADLE",
      "type": "string",
      "x-prompt": {
        "message": "Which build system would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "MAVEN",
            "label": "Maven"
          },
          {
            "value": "GRADLE",
            "label": "Gradle"
          },
          {
            "value": "GRADLE_KOTLIN",
            "label": "Gradle Kotlin"
          }
        ]
      },
      "x-priority": "important"
    },
    "javaVersion": {
      "description": "Java version.",
      "type": "string",
      "default": "JDK_17",
      "enum": [
        "JDK_8",
        "JDK_11",
        "JDK_17"
      ],
      "x-prompt": {
        "message": "Which version of Java would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "JDK_8",
            "label": "8"
          },
          {
            "value": "JDK_11",
            "label": "11"
          },
          {
            "value": "JDK_17",
            "label": "17"
          }
        ]
      },
      "x-priority": "important"
    },
    "language": {
      "description": "Language of the project.",
      "type": "string",
      "default": "JAVA",
      "enum": [
        "JAVA",
        "KOTLIN",
        "GROOVY"
      ],
      "x-prompt": {
        "message": "Which language would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "JAVA",
            "label": "Java"
          },
          {
            "value": "KOTLIN",
            "label": "Kotlin"
          },
          {
            "value": "GROOVY",
            "label": "Groovy"
          }
        ]
      },
      "x-priority": "important"
    },
    "basePackage": {
      "description": "Base package of the project.",
      "type": "string",
      "default": "com.example",
      "x-prompt": "What base package would you like to use?",
      "x-priority": "important"
    },
    "testFramework": {
      "description": "Test framework to use.",
      "type": "string",
      "default": "JUNIT",
      "enum": [
        "JUNIT",
        "SPOCK",
        "KOTEST"
      ],
      "x-prompt": {
        "message": "Which test framework would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "JUNIT",
            "label": "JUnit"
          },
          {
            "value": "SPOCK",
            "label": "Spock"
          },
          {
            "value": "KOTEST",
            "label": "Kotest"
          }
        ]
      },
      "x-priority": "important"
    },
    "skipFormat": {
      "description": "Skip formatting files (using Spotless plugin).",
      "type": "boolean",
      "default": true,
      "x-prompt": "Skip code formatting support(using Spotless plugin)?",
      "x-priority": "internal"
    },
    "features": {
      "description": "Features to use in the project(comma-separated). Follow this guide https://t.ly/_K7V for more instructions on how to proceed.",
      "type": "string",
      "x-priority": "important"
    },
    "transformIntoMultiModule": {
      "description": "Transform the project into a multi-module project. Follow this guide https://t.ly/ov0Y9 for more information.",
      "type": "boolean"
    },
    "addToExistingParentModule": {
      "description": "Add the project into an existing parent module project. Follow this guide https://t.ly/ov0Y9 for more information.",
      "type": "boolean"
    },
    "parentModuleName": {
      "description": "Name of the parent module to create or to add child project into.",
      "type": "string"
    },
    "keepProjectLevelWrapper": {
      "description": "Keep the `Maven` or `Gradle` wrapper files from child project (when generating a multi-module project). Follow this guide https://t.ly/ov0Y9 for more information.",
      "type": "boolean",
      "default": true
    },
    "micronautLaunchUrl": {
      "type": "string",
      "default": "https://launch.micronaut.io",
      "description": "The URL to the Micronaut Launch instance to use to generate the project.",
      "x-priority": "internal"
    },
    "proxyUrl": {
      "type": "string",
      "description": "The URL of the (corporate) proxy server to use to access Micronaut Launch.",
      "x-priority": "internal"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the project (used for linting).",
      "alias": "t",
      "x-priority": "internal"
    },
    "projectNameAndRootFormat": {
      "description": "Whether to generate the project name and root directory as provided (`as-provided`) or generate them composing their values and taking the configured layout into account (`derived`).",
      "type": "string",
      "enum": [
        "as-provided",
        "derived"
      ]
    }
  },
  "required": [
    "prjName",
    "projectType"
  ]
}
