package <%= packageName %>.service<%= lineEnding %>

import <% if(language !== 'kotlin') {%>static <% } %>org.assertj.core.api.Assertions.assertThat<%= lineEnding %>

import org.junit.jupiter.api.Test<%= lineEnding %>

import org.springframework.beans.factory.annotation.Autowired<%= lineEnding %>
import org.springframework.boot.autoconfigure.SpringBootApplication<%= lineEnding %>
import org.springframework.boot.test.context.SpringBootTest<%= lineEnding %>

<% if(language === 'java') {%>@SpringBootTest("<%= projectName %>.service.message=Hello")
public class MyServiceTest {

	@Autowired
	private MyService myService;

	@Test
	public void contextLoads() {
		assertThat(myService.message()).isNotNull();
	}

	@SpringBootApplication
	static class TestConfiguration {
	}
}
<%} else if(language === 'groovy') {%>@SpringBootTest(properties = ["<%= projectName %>.service.message=Hello"])
class MyServiceTest {

	@Autowired
	private MyService myService

	@Test
	void contextLoads() {
		assertThat(myService.message()).isNotNull()
	}

	@SpringBootApplication
	static class TestConfiguration {
	}
}
<%} else if(language === 'kotlin') {%>@SpringBootTest(properties = ["<%= projectName %>.service.message=Hello"])
class MyServiceTest {

	@Autowired
	private lateinit var myService: MyService

	@Test
	fun contextLoads() {
		assertThat(myService.message()).isNotNull()
	}

	@SpringBootApplication
	internal class TestConfiguration
}
<% } %>